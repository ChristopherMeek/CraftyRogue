// Generated by CoffeeScript 1.6.1
(function() {

  define(['crafty', 'tile', 'wall', 'settings', 'rot', 'floor', 'player'], function(crafty, tile, wall, settings, ROT) {
    return {
      width: function() {
        return settings.grid.width * settings.grid.tile.width;
      },
      height: function() {
        return (settings.grid.height * settings.grid.tile.height) + settings.grid.tile.topPadding + settings.grid.tile.bottomPaddi;
      },
      playerStart: null,
      make_tile: function(x, y, isWall) {
        if (isWall) {
          crafty.e('Wall').at(x, y);
        } else {
          crafty.e('Floor').at(x, y);
        }
        if (!isWall && !this.playerStart) {
          return this.playerStart = {
            x: x,
            y: y
          };
        }
      },
      digger2: {
        create: function(makeWall) {
          var x, y, _i, _results;
          _results = [];
          for (x = _i = 0; _i < 10; x = ++_i) {
            _results.push((function() {
              var _j, _results1;
              _results1 = [];
              for (y = _j = 0; _j < 10; y = ++_j) {
                if (x === 0 || x === 9 || y === 0 || y === 9) {
                  _results1.push(makeWall(x, y, 1));
                } else {
                  _results1.push(void 0);
                }
              }
              return _results1;
            })());
          }
          return _results;
        }
      },
      digger: new ROT.Map.Uniform(settings.grid.width, settings.grid.height),
      start: function() {
        console.log("Width:", this.width());
        crafty.init(this.width(), this.height());
        crafty.background('rgb(80, 80, 80)');
        this.digger.create(this.make_tile.bind(this));
        crafty.e('Player').at(this.playerStart.x, this.playerStart.y);
        crafty.viewport.init(800, 600);
        return null;
      }
    };
  });

}).call(this);
